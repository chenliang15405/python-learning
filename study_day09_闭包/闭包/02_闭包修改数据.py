"""
闭包中，内部函数修改外部函数的数据

"""


x = 300
def test1():
    x = 200

    def test2():
        # 表示在这里使用的是不是内部函数中的变量
        nonlocal x
        print("-----1---%d" % x)
        # 如果在内部函数中有修改外部函数中的数据，那么如果在修改之前使用该数据，python会认为该函数未定义，因为它使用
        # 的是内部函数中的变量，所以需要加 nonlocal
        x = 100
        print("-----1---%d" % x)
    return test2

t = test1()
t()
